name: Create Comment of Pull Request

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        description: "GitHub token"
        required: true
    inputs:
      body:
        type: string
        description: "PR Comment Body"
        required: true
      repository:
        type: string
        description: "Repository name"
        required: true
      pr_number:
        type: string
        description: "Pull Request number"
        required: true
jobs:
  create-pr:
    outputs:
      status: ${{ steps.create-pr.outputs.status }}
    runs-on: ubuntu-latest
    steps:
      # - name: Create PR Comment Request Body
      #   id: body
      #   run: |
      #     # body=$(cat <<EOF
      #     #   {
      #     #     "title": "${{ inputs.title }}",
      #     #     "description": "${{ inputs.description }}"
      #     #   }
      #     # EOF)
      #     body=$(jq -n \
      #       --arg title "${{ inputs.title }}" \
      #       --arg description "${{ inputs.description }}" \
      #       '{
      #           title: $title,
      #           description: $description
      #       }')

      #     echo "body=$body" >> $GITHUB_OUTPUT

      # -s --silent: hide progress bar of curl
      # -X --request: HTTP method, default: GET
      # -o --output: output file, default: stdout
      # -H --header: HTTP header
      # -d --data: HTTP body
      # -w --write-out: HTTP status code
      - name: Create PR Comment
        run: |
          echo ${{ inputs.body }}
          # echo "${{ inputs.body }}" > body.txt
          body=$(cat <<-EOF
            ${{ inputs.body }}
          EOF)
          echo =================
          cat body.txt
          echo =================

          # -F body.txt \
          # -b 대신 -F
          gh pr comment ${{ inputs.pr_number }} \
            -b ${{ inputs.body }} \
            -R ${{ inputs.repository }}

          # if [[ $? -eq 0 && "$resp" -ge 200 && "$resp" -lt 300 ]]; then
          #   echo "status=success" >> $GITHUB_OUTPUT
          # else
          #   echo "status=failure" >> $GITHUB_OUTPUT
          # fi
